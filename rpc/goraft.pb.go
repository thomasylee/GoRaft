// Code generated by protoc-gen-go.
// source: goraft.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	goraft.proto

It has these top-level messages:
	AppendEntriesRequest
	AppendEntriesResponse
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppendEntriesRequest struct {
	Term         uint32                        `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	LeaderId     string                        `protobuf:"bytes,2,opt,name=leaderId" json:"leaderId,omitempty"`
	PrevLogIndex uint32                        `protobuf:"varint,3,opt,name=prevLogIndex" json:"prevLogIndex,omitempty"`
	PrevLogTerm  uint32                        `protobuf:"varint,4,opt,name=prevLogTerm" json:"prevLogTerm,omitempty"`
	Entries      []*AppendEntriesRequest_Entry `protobuf:"bytes,5,rep,name=entries" json:"entries,omitempty"`
	LeaderCommit uint32                        `protobuf:"varint,6,opt,name=leaderCommit" json:"leaderCommit,omitempty"`
}

func (m *AppendEntriesRequest) Reset()                    { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()               {}
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppendEntriesRequest) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func (m *AppendEntriesRequest) GetPrevLogIndex() uint32 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogTerm() uint32 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetEntries() []*AppendEntriesRequest_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendEntriesRequest) GetLeaderCommit() uint32 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

type AppendEntriesRequest_Entry struct {
	Term  uint32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *AppendEntriesRequest_Entry) Reset()                    { *m = AppendEntriesRequest_Entry{} }
func (m *AppendEntriesRequest_Entry) String() string            { return proto.CompactTextString(m) }
func (*AppendEntriesRequest_Entry) ProtoMessage()               {}
func (*AppendEntriesRequest_Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *AppendEntriesRequest_Entry) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRequest_Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AppendEntriesRequest_Entry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AppendEntriesResponse struct {
	Term    uint32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *AppendEntriesResponse) Reset()                    { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()               {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppendEntriesResponse) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*AppendEntriesRequest)(nil), "goraft.AppendEntriesRequest")
	proto.RegisterType((*AppendEntriesRequest_Entry)(nil), "goraft.AppendEntriesRequest.Entry")
	proto.RegisterType((*AppendEntriesResponse)(nil), "goraft.AppendEntriesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoRaft service

type GoRaftClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
}

type goRaftClient struct {
	cc *grpc.ClientConn
}

func NewGoRaftClient(cc *grpc.ClientConn) GoRaftClient {
	return &goRaftClient{cc}
}

func (c *goRaftClient) AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := grpc.Invoke(ctx, "/goraft.GoRaft/AppendEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoRaft service

type GoRaftServer interface {
	AppendEntries(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error)
}

func RegisterGoRaftServer(s *grpc.Server, srv GoRaftServer) {
	s.RegisterService(&_GoRaft_serviceDesc, srv)
}

func _GoRaft_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoRaftServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goraft.GoRaft/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoRaftServer).AppendEntries(ctx, req.(*AppendEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoRaft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goraft.GoRaft",
	HandlerType: (*GoRaftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntries",
			Handler:    _GoRaft_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goraft.proto",
}

func init() { proto.RegisterFile("goraft.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x14, 0x84, 0x6d, 0xd3, 0xa4, 0xed, 0x6b, 0x0b, 0xf2, 0xa8, 0xb0, 0x14, 0x85, 0x90, 0x53, 0x4f,
	0x39, 0xd4, 0xab, 0x17, 0x2d, 0x45, 0x0a, 0xe2, 0x61, 0xf1, 0x20, 0xde, 0x62, 0xf2, 0x2c, 0xc5,
	0x26, 0xbb, 0xee, 0x6e, 0x8a, 0xfd, 0x5d, 0xfe, 0x41, 0x9b, 0xdd, 0x54, 0x5a, 0x89, 0xde, 0xde,
	0x4c, 0x32, 0xc3, 0x37, 0x2c, 0x0c, 0x57, 0x42, 0x25, 0x6f, 0x26, 0x96, 0x4a, 0x18, 0x81, 0x81,
	0x53, 0xd1, 0x57, 0x1b, 0xc6, 0xb7, 0x52, 0x52, 0x91, 0x2d, 0x0a, 0xa3, 0xd6, 0xa4, 0x39, 0x7d,
	0x94, 0xa4, 0x0d, 0x22, 0x74, 0x0c, 0xa9, 0x9c, 0xb5, 0xc2, 0xd6, 0x74, 0xc4, 0xed, 0x8d, 0x13,
	0xe8, 0x6d, 0x28, 0xc9, 0x48, 0x2d, 0x33, 0xd6, 0xde, 0xfb, 0x7d, 0xfe, 0xa3, 0x31, 0x82, 0xa1,
	0x54, 0xb4, 0x7d, 0x10, 0xab, 0x65, 0x91, 0xd1, 0x27, 0xf3, 0x6c, 0xee, 0xc4, 0xc3, 0x10, 0x06,
	0xb5, 0x7e, 0xaa, 0xaa, 0x3b, 0xf6, 0x97, 0x63, 0x0b, 0x6f, 0xa0, 0x4b, 0x8e, 0x83, 0xf9, 0xa1,
	0x37, 0x1d, 0xcc, 0xa2, 0xb8, 0xc6, 0x6e, 0x82, 0x8c, 0x2b, 0xb9, 0xe3, 0x87, 0x48, 0xc5, 0xe0,
	0x78, 0xe6, 0x22, 0xcf, 0xd7, 0x86, 0x05, 0x8e, 0xe1, 0xd8, 0x9b, 0xcc, 0xc1, 0xb7, 0xa9, 0xc6,
	0x81, 0xe7, 0xe0, 0xbd, 0xd3, 0xae, 0xde, 0x56, 0x9d, 0x38, 0x06, 0x7f, 0x9b, 0x6c, 0x4a, 0xb2,
	0x7b, 0xfa, 0xdc, 0x89, 0x68, 0x01, 0x17, 0xbf, 0x78, 0xb4, 0x14, 0x85, 0xa6, 0xc6, 0x52, 0x06,
	0x5d, 0x5d, 0xa6, 0x29, 0x69, 0x6d, 0x8b, 0x7b, 0xfc, 0x20, 0x67, 0xcf, 0x10, 0xdc, 0x0b, 0xbe,
	0x5f, 0x87, 0x8f, 0x30, 0x3a, 0x29, 0xc4, 0xcb, 0xff, 0x76, 0x4f, 0xae, 0xfe, 0xf8, 0xea, 0x28,
	0xa2, 0xb3, 0x3b, 0xff, 0xc5, 0x53, 0x32, 0x7d, 0x0d, 0xec, 0x63, 0x5f, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x1d, 0x77, 0x6b, 0xf8, 0xfc, 0x01, 0x00, 0x00,
}
